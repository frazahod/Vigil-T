
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import org.apache.commons.net.ftp.FTPClient;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author fraserhood
 */
public class webpostinfo extends javax.swing.JFrame {

    /**
     * Creates new form webpostinfo
     */
    public webpostinfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        website = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        done = new javax.swing.JButton();
        remotefilepath = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passwordstar = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        loadset = new javax.swing.JMenu();
        loadset2 = new javax.swing.JMenuItem();
        toRename = new javax.swing.JMenuItem();
        toCell = new javax.swing.JMenuItem();
        toEmail = new javax.swing.JMenuItem();
        toDailyMail = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Website");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        done.setText("Done");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        remotefilepath.setText("ex: public_html/mytempplots");
        remotefilepath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remotefilepathActionPerformed(evt);
            }
        });

        jLabel4.setText("Remote file path");

        loadset.setText("File");

        loadset2.setText("load current settings");
        loadset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadset2ActionPerformed(evt);
            }
        });
        loadset.add(loadset2);

        toRename.setText("Names");
        toRename.setToolTipText("");
        toRename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toRenameActionPerformed(evt);
            }
        });
        loadset.add(toRename);

        toCell.setText("Text Alarms");
        toCell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toCellActionPerformed(evt);
            }
        });
        loadset.add(toCell);

        toEmail.setText("Alarm Email");
        toEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toEmailActionPerformed(evt);
            }
        });
        loadset.add(toEmail);

        toDailyMail.setText("Daily Email");
        toDailyMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toDailyMailActionPerformed(evt);
            }
        });
        loadset.add(toDailyMail);

        jMenuBar1.add(loadset);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(cancel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 223, Short.MAX_VALUE)
                            .addComponent(done))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(website, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                                .addComponent(username)
                                .addComponent(passwordstar))
                            .addGap(31, 31, 31)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addComponent(remotefilepath, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(website, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordstar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remotefilepath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(done))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    The following code is executed when the done button is clicked. It calls the
    method that writes the data to a file and then tries to upload the file to the
    given server. If it can't it informs the user that their data was
    probably incorrect or their server is down.
    */
    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
        FileInputStream in = null;
        File file = new File("WebInfoTest");
        //Write data to file
        try{
        PrintWriter writer = new PrintWriter("WebInfoTest");
        writer.println("This is a test ftp file");
        writer.close();
        }catch (Exception e){
            
        }
        /*
        this code uses the apache commons net library which is why we have to 
        include the lib directory wherever we try to run this app from.
        */
        try{
            //Code that connects to the server,if it fails it brings up a web error.
            FTPClient f = new FTPClient();
            f.connect(website.getText());
            f.login(username.getText(), new String(passwordstar.getPassword()));
            in = new FileInputStream("WebInfoTest");
            
            boolean b = f.storeFile(remotefilepath.getText() +"/" + "WebInfoTest",in);
            if(!b){
                throw new IOException();
            }
            //you can mess with this
            //This line is where it writes the info to a file
            setWebInfo(website.getText(),username.getText(),new String(passwordstar.getPassword()),remotefilepath.getText());
            new Confirm().setVisible(true);
            this.setVisible(false);// TODO add your handling code here:
            //dont touch this line!
            f.disconnect();
        }catch (IOException e){
            // if it fails to connect it pops the error window
             new webError().setVisible(true);
        }
       
        
    }//GEN-LAST:event_doneActionPerformed

    /*
    This code gets run when the cancel button is clicked. It closes everything.
    */
    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
       System.exit(0); // TODO add your handling code here:
    }//GEN-LAST:event_cancelActionPerformed

    /*
    Ignore this please!
    */
    private void remotefilepathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remotefilepathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remotefilepathActionPerformed

    /*
    loads the current information into the fields. See the GUI class for details.
    */
    private void loadset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadset2ActionPerformed
        File f = new File("WebInfo");
        
        if(f.exists()) {
            try {
              FileReader fileReader= new FileReader(f);
              BufferedReader bufferedReader= new BufferedReader(fileReader);
              String s = bufferedReader.readLine();
              String[] str = s.split(",");
              website.setText(str[0]);
              //s = bufferedReader.readLine();
              username.setText(str[1]);
              //s = bufferedReader.readLine();
              passwordstar.setText(str[2]);
              remotefilepath.setText(str[3]);
              bufferedReader.close();
              
              
            } catch (IOException e){
                
            }
        }else {
            
        }
    }//GEN-LAST:event_loadset2ActionPerformed

    /*
    this pops the other startup settigs window
    */
    private void toRenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toRenameActionPerformed
        this.setVisible(false);
        new Rename().setVisible(true);
    }//GEN-LAST:event_toRenameActionPerformed

    private void toEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toEmailActionPerformed
        this.setVisible(false);
        new Email().setVisible(true);
    }//GEN-LAST:event_toEmailActionPerformed

    private void toCellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toCellActionPerformed
        this.setVisible(false);
        new Cell().setVisible(true);
    }//GEN-LAST:event_toCellActionPerformed

    private void toDailyMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toDailyMailActionPerformed
        this.setVisible(false);
        new DailyMail().setVisible(true);
    }//GEN-LAST:event_toDailyMailActionPerformed

    /*
    this is the code that actually writes to the file. See the GUI class for 
    details.
    */
    private void setWebInfo(String website,String username,String password,String remotefilepath){
        FileWriter fileWriter;
	BufferedWriter bufferedWriter;
        
        try{
            fileWriter= new FileWriter("WebInfo");
            bufferedWriter= new BufferedWriter(fileWriter);
            
            bufferedWriter.write(website + "," + username + "," + password + "," + remotefilepath + "\n");
            bufferedWriter.close();
        }catch(IOException e){
            e.printStackTrace();
        }finally{
            
        }
    }
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(webpostinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(webpostinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(webpostinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(webpostinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new webpostinfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JButton done;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu loadset;
    private javax.swing.JMenuItem loadset2;
    private javax.swing.JPasswordField passwordstar;
    private javax.swing.JTextField remotefilepath;
    private javax.swing.JMenuItem toCell;
    private javax.swing.JMenuItem toDailyMail;
    private javax.swing.JMenuItem toEmail;
    private javax.swing.JMenuItem toRename;
    private javax.swing.JTextField username;
    private javax.swing.JTextField website;
    // End of variables declaration//GEN-END:variables
}
