
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.FilenameFilter;
import java.io.IOException;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author fraserhood
 */
public class Startup extends javax.swing.JFrame {

    /**
     * Creates new form Startup
     */
    public Startup() {
        initComponents();
        //Create a file object by giving it the path of the thermometer files.
        File file = new File("/sys/bus/w1/devices");
        //Create a new method that only lists the directories by overriding the
        //previous method. Uses file object created previously.
        String[] directories = file.list(new FilenameFilter() {
        @Override
            public boolean accept(File current, String name) {
                if(new File(current, name).getName().startsWith("w")){
                    return false;
                }
                return new File(current, name).isDirectory();
            }
            
        });
        
        FileWriter fileWriter;
        BufferedWriter bufferedWriter;
        /*
        Use the objects initialized above to write all the thermometer names
        found above to a file called thermometers.
        */
        try{
            fileWriter= new FileWriter("thermometers");
	    bufferedWriter= new BufferedWriter(fileWriter);
            for(int i = 0; i < directories.length; i++){
                bufferedWriter.write(directories[i] + "\n");
            }
            bufferedWriter.close();
        }catch (IOException e){
            //print stack trace here
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Yes = new javax.swing.JButton();
        No = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Would you like to run start-up settings");

        Yes.setText("Yes");
        Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YesActionPerformed(evt);
            }
        });

        No.setText("No");
        No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoActionPerformed(evt);
            }
        });

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(No)
                .addGap(47, 47, 47)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(Yes)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Yes)
                    .addComponent(No)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    static Timer displayTimer;
    
    /*
    Method run when yes is clicked. Creates the next window and sets it visible.
    Stops the timer that starts the system automatically after 30 seconds.
    */
    private void YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YesActionPerformed
        new Rename().setVisible(true);
        displayTimer.stop();
        Yes.setEnabled(false);
            //System.exit(0);
        
    }//GEN-LAST:event_YesActionPerformed

    /*
    Method run when no is clicked. 
    */
    private void NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoActionPerformed
        /*
        The code up until the system.exit may be leftover from when
        comscript coudnt tell if the program had quit, but I am too scared to 
        remove it without adequate testing.
        */
        FileWriter fileWriter;
        try{
            //create file so comscript knows when to continue executing.
            fileWriter= new FileWriter("test");
        }catch(IOException e){
            
        }
        System.exit(0);// Shuts the whole program down.
    }//GEN-LAST:event_NoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FileWriter fileWriter;
        try{
            //create file so comscript knows when to continue executing.
            fileWriter= new FileWriter("test");
        }catch(IOException e){
            
        }
        
        System.exit(0);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    /*
    Vince, the main method is (as you probably know from C) run on the execution
    of the program. This one has a timer that starts, and when the timer finishes
    it quits the program som ComScript can resume running. You can change the 
    amount of time in the new Timer(.....,....); call.
    */
    public static void main(String args[]) {
        /*
        This actionlistener uses overriding to tell the timer what to execute
        when it has run for the allotted time. In this case it just quits 
        everything. You stop it with the .stop call (used in the yes button
        click) and that stops the actionPerformed() code from being run.
        */
        ActionListener listener = new ActionListener(){
            public void actionPerformed(ActionEvent event){
                System.exit(0);
            }
        };
        //create new timer. 
        displayTimer = new Timer(30000, listener);
        displayTimer.start();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Startup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton No;
    private javax.swing.JButton Yes;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
